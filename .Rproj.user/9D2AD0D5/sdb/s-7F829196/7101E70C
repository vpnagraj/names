{
    "contents" : "# install.packages(\"genderdata\", repos = \"http://packages.ropensci.org\")\nlibrary(genderdata)\nlibrary(shiny)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(ggthemes)\n\nui <- fluidPage(titlePanel(title = \"names (1880-2012)\"),\n                textInput(\"name\", \"enter a name\", value = \"prince\"),\n                actionButton(\"go\", \"search\"),\n                plotOutput(\"plot1\", brush = \"plot_brush\"),\n                plotOutput(\"plot2\"),\n                htmlOutput(\"info\")\n                \n)\n\nserver <- function(input, output) {\n    \n    dat <- eventReactive(input$go, {\n        \n        # create total number of records per year to calculate proprotion\n        d <- ssa_national %>%\n            group_by(year) %>%\n            summarise(n = n())\n        \n        # filter ssa_national object that was loaded in genderdata package\n        # join with object created above and calculate proportion\n        ssa_national %>%   \n            filter(name == tolower(input$name)) %>%\n            mutate(total = male + female) %>%\n            left_join(d) %>%\n            mutate(prop = total / n) \n        \n    })\n    \n    output$plot1 <- renderPlot({\n        \n        ggplot(dat(), aes(year, prop, col=name)) + \n            geom_line() + \n            xlim(1880,2012) +\n            theme_minimal() +\n            labs(list(title =\"% of individuals born with name by year\",\n                      x = \"\\n click-and-drag over the plot to 'zoom'\",\n                      y = \"\"))\n        \n    })\n    \n    output$plot2 <- renderPlot({\n        \n        # need latest version of shiny to use req() function\n        req(input$plot_brush)\n        brushed <- brushedPoints(dat(), input$plot_brush)\n        \n        ggplot(brushed, aes(year, prop, col = name)) + \n            geom_line() +\n            theme_minimal() +\n            labs(list(title =\"% of individuals born with name by year\",\n                      x = \"\",\n                      y = \"\"))\n        \n    })\n    \n    output$info <- renderText({\n        \n        \"<p>data source: <a href='https://github.com/ropensci/genderdata'>social security administration names from genderdata package</a></p>\"\n        \n    })\n    \n}\n\nshinyApp(ui, server)",
    "created" : 1454450990441.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2831090455",
    "id" : "7101E70C",
    "lastKnownWriteTime" : 1454520229,
    "path" : "~/Sites/Shiny/names/app.R",
    "project_path" : "app.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}